plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.carpool'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	
	// Database
	runtimeOnly 'org.postgresql:postgresql'
	
	// Blockchain
	implementation 'org.web3j:core:4.9.0'
	implementation 'org.web3j:web3j-spring-boot-starter:1.6.0'
	
	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	// Development Tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Additional dependencies
	implementation 'org.web3j:core:4.9.0'
	implementation 'io.github.cdimascio:java-dotenv:5.2.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Add task to download Web3j CLI
task downloadWeb3jCli {
	doLast {
		def web3jCliUrl = 'https://github.com/web3j/web3j/releases/download/v4.9.0/web3j-cli-4.9.0-all.jar'
		def web3jCliFile = file('web3j-cli-4.9.0-all.jar')
		
		if (!web3jCliFile.exists()) {
			println "Downloading Web3j CLI..."
			new URL(web3jCliUrl).withInputStream { i -> web3jCliFile.withOutputStream { it << i } }
			println "Web3j CLI downloaded successfully"
		} else {
			println "Web3j CLI already exists"
		}
	}
}

// Update generateContractWrappers task to depend on downloadWeb3jCli
task generateContractWrappers(type: JavaExec) {
	dependsOn downloadWeb3jCli
	classpath = files('web3j-cli-4.9.0-all.jar')
	mainClass = 'org.web3j.codegen.SolidityFunctionWrapperGenerator'
	args = [
		'--solidityTypes=org.web3j.abi.datatypes',
		'--outputFormat=java',
		'--package=com.carpool.BlockChain_Based_Carpooling.contract.generated',
		'--outputDir=src/main/java',
		'src/main/resources/contracts'
	]
}